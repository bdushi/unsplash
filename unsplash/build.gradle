plugins {
    id 'maven-publish'
    id 'org.jetbrains.kotlin.kapt'
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android
    alias libs.plugins.google.maps.secrets
}

android {
    compileSdk 34
    namespace 'al.bruno.un.splash'
    defaultConfig {
        minSdk 21
        targetSdk 34
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
    }
    viewBinding {
        enabled  = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
}

/**
 * https://developer.android.com/studio/build/maven-publish-plugin
 */
afterEvaluate {
    publishing {
        /**
         * https://gist.github.com/dhei/38cbc9b79f5f442d0d2f11106a76662d
         *
         * https://docs.gradle.org/current/userguide/publishing_maven.html
         */
        Properties properties = new Properties()
        File file = rootProject.file('local.properties')
        if (file.exists()) {
            properties.load(file.newDataInputStream())
        }
        publications {
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release
                // Publication attributes.
                groupId 'al.bruno'
                artifactId 'un-official'
                version '1.0.0'
            }
        }
        repositories {
            /**
             * https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-gradle
             */
            def token = project.findProperty("UN_OFFICIAL_GITHUB_TOKEN")//properties.getProperty("UN_OFFICIAL_GITHUB_TOKEN")
            println token
            maven {
                name = 'GitHubPackages'
                url = uri('https://maven.pkg.github.com/bdushi/unsplash')
                credentials {
                    username = 'bdushi'
                    password = token
                }
            }
        }
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.fragment
    implementation libs.navigation.fragment
    implementation libs.navigation.ui
    implementation libs.android.core
    implementation libs.google.android.material
    implementation libs.lifecycle
    implementation libs.viewpager2
    implementation libs.swiperefreshlayout

    api project(path: ':di')
    api project(path: ':adapter')

    // Retrofit
    api libs.retrofit
    api libs.converter.gson
    api libs.logging.interceptor

    api libs.dagger2
    kapt libs.dagger2.compiler
    implementation libs.dagger2.android
    implementation libs.dagger2.android.support
    kapt libs.dagger2.processor
    // Picasso
    api libs.picasso

    /**
     * epoxy
     */
    implementation libs.epoxy
    implementation libs.epoxy.databinding
    implementation libs.epoxy.paging
    kapt libs.epoxy.processor

    testImplementation libs.junit
    androidTestImplementation libs.ext.test
    androidTestImplementation libs.espresso.test
}
